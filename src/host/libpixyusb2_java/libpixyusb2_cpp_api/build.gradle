plugins {
    id 'cpp-library'
}

def javaIncludeDirectory = System.properties.'java.home' + "/include"

tasks.withType(CppCompile).configureEach {
  source.from(
    "$generatedCppDir/pixy_wrap.cpp",
    "../../../common/src/chirp.cpp",
    "../../libpixyusb2/src/libpixyusb2.cpp",
    "../../libpixyusb2/src/usblink.cpp",
    "../../libpixyusb2/src/util.cpp"
  )
  includes.from(
    javaIncludeDirectory,
    "../../../common/inc/",
    "../../libpixyusb2/include/",
    "../../arduino/libraries/Pixy2/",
    targetPlatform.map { targetPlatform ->
      if (targetPlatform.operatingSystem.windows) {
        return ["C:/Libraries/libusb-1.0"]
      } else {
        return [
          "$javaIncludeDirectory/linux",
          "/usr/include/libusb-1.0"
        ]
      }
    }
  )
}

tasks.withType(LinkSharedLibrary).configureEach {
  libs.from(
    targetPlatform.map { targetPlatform ->
      if (targetPlatform.operatingSystem.windows) {
        return ["C:/Libraries/libusb-1.0.dll"]
      } else {
        return ["/usr/lib/libusb-1.0.so"]
      }
  })
}